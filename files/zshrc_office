# Path to your oh-my-zsh installation.
export ZSH=/Users/e31707/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="af-magic-clean"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git colorize docker github vagrant brew osx zsh-syntax-highlighting sublime sudo)

# User configuration

export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/Users/e31707/.local/bin:/Users/e31707/bin:/Applications/VMWare Fusion.app/Contents/Library"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='subl -w'
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
export SSH_KEY_PATH="~/.ssh/id_rsa"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
alias zshconfig="subl ~/.zshrc"
alias ohmyzsh="subl ~/.oh-my-zsh"

source $HOME/bin/common.sh

function tunnel() {
  function status() {
    pid=$(ps -fea | grep ssh | grep Tunnel | awk '{print $2}')
    [[ "$1" == "-q" ]] && echo ${pid} && return ${pid}
    [[ -n ${pid} ]] && info "The tunnel is \x1B[92;1mopen\x1B[0m (PID: ${pid})"
    [[ -z ${pid} ]] && info "The tunnel is \x1B[91;1mclose\x1B[0m"
    return 0
  }

  function open() {
    pid=$(status -q)
    [[ -n ${pid} ]] && error "The tunnel is already \x1B[92;1mopen\x1B[0m (PID: ${pid})" && return 0
    ssh -f -N -F ~/.ssh/tunnelConfig BastionTunnel
    pid=$(status -q)
    [[ -z ${pid} ]] && error "The tunnel is not open or can't be found (${pid})"
    [[ -n ${pid} ]] && ok "The tunnel is \x1B[92;1mopen\x1B[0m (PID: ${pid})"
    return 0
  }

  function close() {
    pid=$(status -q)
    [[ -z ${pid} ]] && error "The tunnel is not open or can't be found." && return 0
    [[ -n ${pid} ]] && kill ${pid}
    pid=$(status -q)
    [[ -z ${pid} ]] && ok "The tunnel is \x1B[91;1mclose\x1B[0m now."
    [[ -n ${pid} ]] && error "For some reason the tunnel is still open or there were more than one tunnel open. (PID: ${pid})"
    return 0
  }

  [[ -z $1 ]] && error "Need an action to the tunnel. Available actions are: open, close and status" && return 1
  if [[ "$1" == "open" ]]; then open; return 0;
  elif [[ "$1" == "close" ]]; then close; return 0;
  elif [[ "$1" == "status" ]]; then status $2;
  else error "Unknow action $1. Available actions are: open, close and status"; fi
}

# Docker-Machine variables
eval "$(docker-machine env default)"
